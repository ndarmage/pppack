!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module r8lib ! in 
    interface  ! in :r8lib
        subroutine gamma_values(n_data,x,fx) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n_data
            real(kind=8) :: x
            real(kind=8) :: fx
        end subroutine gamma_values
        subroutine gamma_log_values(n_data,x,fx) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n_data
            real(kind=8) :: x
            real(kind=8) :: fx
        end subroutine gamma_log_values
        subroutine get_unit(iunit) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: iunit
        end subroutine get_unit
        function i4_log_10(i) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: i
            integer(kind=4) :: i4_log_10
        end function i4_log_10
        function i4_modp(i,j) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: i
            integer(kind=4) :: j
            integer(kind=4) :: i4_modp
        end function i4_modp
        function i4_uniform_ab(a,b,seed) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: a
            integer(kind=4) :: b
            integer(kind=4) :: seed
            integer(kind=4) :: i4_uniform_ab
        end function i4_uniform_ab
        function i4_wrap(ival,ilo,ihi) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: ival
            integer(kind=4) :: ilo
            integer(kind=4) :: ihi
            integer(kind=4) :: i4_wrap
        end function i4_wrap
        subroutine i4int_to_r8int(imin,imax,i,rmin,rmax,r) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: imin
            integer(kind=4) :: imax
            integer(kind=4) :: i
            real(kind=8) :: rmin
            real(kind=8) :: rmax
            real(kind=8) :: r
        end subroutine i4int_to_r8int
        subroutine i4mat_print(m,n,a,title) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(shape(a,0)==m),depend(a) :: m=shape(a,0)
            integer(kind=4), optional,check(shape(a,1)==n),depend(a) :: n=shape(a,1)
            integer(kind=4) dimension(m,n) :: a
            character*(*) :: title
        end subroutine i4mat_print
        subroutine i4mat_print_some(m,n,a,ilo,jlo,ihi,jhi,title) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(shape(a,0)==m),depend(a) :: m=shape(a,0)
            integer(kind=4), optional,check(shape(a,1)==n),depend(a) :: n=shape(a,1)
            integer(kind=4) dimension(m,n) :: a
            integer(kind=4) :: ilo
            integer(kind=4) :: jlo
            integer(kind=4) :: ihi
            integer(kind=4) :: jhi
            character*(*) :: title
        end subroutine i4mat_print_some
        subroutine i4vec_indicator0(n,a) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(a)>=n),depend(a) :: n=len(a)
            integer(kind=4) dimension(n) :: a
        end subroutine i4vec_indicator0
        subroutine i4vec_indicator1(n,a) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(a)>=n),depend(a) :: n=len(a)
            integer(kind=4) dimension(n) :: a
        end subroutine i4vec_indicator1
        subroutine i4vec_permute(n,p,a) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(p)>=n),depend(p) :: n=len(p)
            integer(kind=4) dimension(n) :: p
            integer(kind=4) dimension(n),depend(n) :: a
        end subroutine i4vec_permute
        subroutine i4vec_print(n,a,title) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(a)>=n),depend(a) :: n=len(a)
            integer(kind=4) dimension(n) :: a
            character*(*) :: title
        end subroutine i4vec_print
        subroutine i4vec_transpose_print(n,a,title) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(a)>=n),depend(a) :: n=len(a)
            integer(kind=4) dimension(n) :: a
            character*(*) :: title
        end subroutine i4vec_transpose_print
        subroutine legendre_zeros(n,x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(x)>=n),depend(x) :: n=len(x)
            real(kind=8) dimension(n) :: x
        end subroutine legendre_zeros
        function perm0_check(n,p) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(p)>=n),depend(p) :: n=len(p)
            integer(kind=4) dimension(n) :: p
            integer(kind=4) :: perm0_check
        end function perm0_check
        subroutine perm0_uniform(n,seed,p) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(p)>=n),depend(p) :: n=len(p)
            integer(kind=4) :: seed
            integer(kind=4) dimension(n) :: p
        end subroutine perm0_uniform
        function perm1_check(n,p) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(p)>=n),depend(p) :: n=len(p)
            integer(kind=4) dimension(n) :: p
            integer(kind=4) :: perm1_check
        end function perm1_check
        subroutine perm1_uniform(n,seed,p) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(len(p)>=n),depend(p) :: n=len(p)
            integer(kind=4) :: seed
            integer(kind=4) dimension(n) :: p
        end subroutine perm1_uniform
        function r8_abs(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_abs
        end function r8_abs
        function r8_acos(c) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: c
            real(kind=8) :: r8_acos
        end function r8_acos
        function r8_acosh(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_acosh
        end function r8_acosh
        function r8_add(x,y) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
            real(kind=8) :: r8_add
        end function r8_add
        function r8_agm(a,b) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: a
            real(kind=8) :: b
            real(kind=8) :: r8_agm
        end function r8_agm
        function r8_aint(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_aint
        end function r8_aint
        function r8_asin(s) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: s
            real(kind=8) :: r8_asin
        end function r8_asin
        function r8_asinh(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_asinh
        end function r8_asinh
        function r8_atan(y,x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: y
            real(kind=8) :: x
            real(kind=8) :: r8_atan
        end function r8_atan
        function r8_atanh(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_atanh
        end function r8_atanh
        function r8_big() ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r8_big
        end function r8_big
        function r8_cas(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_cas
        end function r8_cas
        function r8_ceiling(r) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            real(kind=8) :: r8_ceiling
        end function r8_ceiling
        function r8_choose(n,k) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n
            integer(kind=4) :: k
            real(kind=8) :: r8_choose
        end function r8_choose
        function r8_chop(place,x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: place
            real(kind=8) :: x
            real(kind=8) :: r8_chop
        end function r8_chop
        function r8_cosd(degrees) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: degrees
            real(kind=8) :: r8_cosd
        end function r8_cosd
        function r8_cot(angle) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: angle
            real(kind=8) :: r8_cot
        end function r8_cot
        function r8_cotd(degrees) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: degrees
            real(kind=8) :: r8_cotd
        end function r8_cotd
        function r8_csc(theta) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: theta
            real(kind=8) :: r8_csc
        end function r8_csc
        function r8_cscd(degrees) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: degrees
            real(kind=8) :: r8_cscd
        end function r8_cscd
        function r8_csqrt(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            complex(kind=8) :: r8_csqrt
        end function r8_csqrt
        function r8_cube_root(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_cube_root
        end function r8_cube_root
        function r8_degrees(radians) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: radians
            real(kind=8) :: r8_degrees
        end function r8_degrees
        function r8_diff(x,y,n) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
            integer(kind=4) :: n
            real(kind=8) :: r8_diff
        end function r8_diff
        subroutine r8_digit(x,idigit,digit) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            integer(kind=4) :: idigit
            integer(kind=4) :: digit
        end subroutine r8_digit
        function r8_divide_i4(i,j) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: i
            integer(kind=4) :: j
            real(kind=8) :: r8_divide_i4
        end function r8_divide_i4
        function r8_e() ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r8_e
        end function r8_e
        function r8_epsilon() ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r8_epsilon
        end function r8_epsilon
        function r8_epsilon_compute() ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r8_epsilon_compute
        end function r8_epsilon_compute
        function r8_exp(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_exp
        end function r8_exp
        function r8_factorial(n) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n
            real(kind=8) :: r8_factorial
        end function r8_factorial
        function r8_factorial_stirling(n) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n
            real(kind=8) :: r8_factorial_stirling
        end function r8_factorial_stirling
        subroutine r8_factorial_values(n_data,n,fn) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n_data
            integer(kind=4) :: n
            real(kind=8) :: fn
        end subroutine r8_factorial_values
        function r8_factorial2(n) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n
            real(kind=8) :: r8_factorial2
        end function r8_factorial2
        subroutine r8_factorial2_values(n_data,n,f) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n_data
            integer(kind=4) :: n
            real(kind=8) :: f
        end subroutine r8_factorial2_values
        function r8_fall(x,n) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            integer(kind=4) :: n
            real(kind=8) :: r8_fall
        end function r8_fall
        subroutine r8_fall_values(n_data,x,n,f) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n_data
            real(kind=8) :: x
            integer(kind=4) :: n
            real(kind=8) :: f
        end subroutine r8_fall_values
        function r8_floor(r) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            real(kind=8) :: r8_floor
        end function r8_floor
        function r8_fraction(i,j) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: i
            integer(kind=4) :: j
            real(kind=8) :: r8_fraction
        end function r8_fraction
        function r8_fractional(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_fractional
        end function r8_fractional
        function r8_gamma(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_gamma
        end function r8_gamma
        function r8_gamma_log(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_gamma_log
        end function r8_gamma_log
        function r8_huge() ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r8_huge
        end function r8_huge
        function r8_hypot(x,y) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
            real(kind=8) :: r8_hypot
        end function r8_hypot
        function r8_in_01(a) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: a
            logical(kind=4) :: r8_in_01
        end function r8_in_01
        function r8_insignificant(r,s) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            real(kind=8) :: s
            logical(kind=4) :: r8_insignificant
        end function r8_insignificant
        function r8_is_inf(r) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            logical(kind=4) :: r8_is_inf
        end function r8_is_inf
        function r8_is_int(r) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            logical(kind=4) :: r8_is_int
        end function r8_is_int
        function r8_is_nan(r) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            logical(kind=4) :: r8_is_nan
        end function r8_is_nan
        function r8_log_2(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_log_2
        end function r8_log_2
        function r8_log_10(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_log_10
        end function r8_log_10
        function r8_log_b(x,b) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: b
            real(kind=8) :: r8_log_b
        end function r8_log_b
        subroutine r8_mant(x,s,r,l) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            integer(kind=4) :: s
            real(kind=8) :: r
            integer(kind=4) :: l
        end subroutine r8_mant
        function r8_max(x,y) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
            real(kind=8) :: r8_max
        end function r8_max
        function r8_min(x,y) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
            real(kind=8) :: r8_min
        end function r8_min
        function r8_mod(x,y) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
            real(kind=8) :: r8_mod
        end function r8_mod
        function r8_modp(x,y) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
            real(kind=8) :: r8_modp
        end function r8_modp
        function r8_mop(i) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: i
            real(kind=8) :: r8_mop
        end function r8_mop
        function r8_nan() ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r8_nan
        end function r8_nan
        function r8_nint(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            integer(kind=4) :: r8_nint
        end function r8_nint
        function r8_normal_01(seed) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: seed
            real(kind=8) :: r8_normal_01
        end function r8_normal_01
        function r8_normal_ab(a,b,seed) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: a
            real(kind=8) :: b
            integer(kind=4) :: seed
            real(kind=8) :: r8_normal_ab
        end function r8_normal_ab
        function r8_nth_root(x,n) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            integer(kind=4) :: n
            real(kind=8) :: r8_nth_root
        end function r8_nth_root
        function r8_pi() ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r8_pi
        end function r8_pi
        function r8_pi_sqrt() ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r8_pi_sqrt
        end function r8_pi_sqrt
        function r8_power(r,p) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            integer(kind=4) :: p
            real(kind=8) :: r8_power
        end function r8_power
        subroutine r8_power_fast(r,p,rp,mults) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            integer(kind=4) :: p
            real(kind=8) :: rp
            integer(kind=4) :: mults
        end subroutine r8_power_fast
        subroutine r8_print(r,title) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            character*(*) :: title
        end subroutine r8_print
        function r8_pythag(a,b) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: a
            real(kind=8) :: b
            real(kind=8) :: r8_pythag
        end function r8_pythag
        function r8_radians(degrees) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: degrees
            real(kind=8) :: r8_radians
        end function r8_radians
        function r8_rise(x,n) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            integer(kind=4) :: n
            real(kind=8) :: r8_rise
        end function r8_rise
        subroutine r8_rise_values(n_data,x,n,f) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: n_data
            real(kind=8) :: x
            integer(kind=4) :: n
            real(kind=8) :: f
        end subroutine r8_rise_values
        function r8_round(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_round
        end function r8_round
        function r8_round_i4(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            integer(kind=4) :: r8_round_i4
        end function r8_round_i4
        subroutine r8_round2(nplace,x,xround) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: nplace
            real(kind=8) :: x
            real(kind=8) :: xround
        end subroutine r8_round2
        subroutine r8_roundb(base,nplace,x,xround) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: base
            integer(kind=4) :: nplace
            real(kind=8) :: x
            real(kind=8) :: xround
        end subroutine r8_roundb
        subroutine r8_roundx(nplace,x,xround) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: nplace
            real(kind=8) :: x
            real(kind=8) :: xround
        end subroutine r8_roundx
        function r8_secd(degrees) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: degrees
            real(kind=8) :: r8_secd
        end function r8_secd
        function r8_sech(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_sech
        end function r8_sech
        function r8_sign(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_sign
        end function r8_sign
        function r8_sign3(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: r8_sign3
        end function r8_sign3
        function r8_sign_char(x) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            character :: r8_sign_char
        end function r8_sign_char
        function r8_sign_match(r1,r2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r1
            real(kind=8) :: r2
            logical(kind=4) :: r8_sign_match
        end function r8_sign_match
        function r8_sign_match_strict(r1,r2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r1
            real(kind=8) :: r2
            logical(kind=4) :: r8_sign_match_strict
        end function r8_sign_match_strict
        function r8_sign_opposite(r1,r2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r1
            real(kind=8) :: r2
            logical(kind=4) :: r8_sign_opposite
        end function r8_sign_opposite
        function r8_sign_opposite_strict(r1,r2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r1
            real(kind=8) :: r2
            logical(kind=4) :: r8_sign_opposite_strict
        end function r8_sign_opposite_strict
        subroutine r8_sincos_sum(a,b,d,e,f) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: a
            real(kind=8) :: b
            real(kind=8) :: d
            real(kind=8) :: e
            real(kind=8) :: f
        end subroutine r8_sincos_sum
        function r8_sind(degrees) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: degrees
            real(kind=8) :: r8_sind
        end function r8_sind
        function r8_sqrt_i4(i) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: i
            real(kind=8) :: r8_sqrt_i4
        end function r8_sqrt_i4
        subroutine r8_swap(x,y) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
        end subroutine r8_swap
        subroutine r8_swap3(x,y,z) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
            real(kind=8) :: z
        end subroutine r8_swap3
        function r8_tand(degrees) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: degrees
            real(kind=8) :: r8_tand
        end function r8_tand
        function r8_tiny() ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r8_tiny
        end function r8_tiny
        subroutine r8_to_r8_discrete(r,rmin,rmax,nr,rd) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            real(kind=8) :: rmin
            real(kind=8) :: rmax
            integer(kind=4) :: nr
            real(kind=8) :: rd
        end subroutine r8_to_r8_discrete
        subroutine r8_to_dhms(r,d,h,m,s) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            integer(kind=4) :: d
            integer(kind=4) :: h
            integer(kind=4) :: m
            integer(kind=4) :: s
        end subroutine r8_to_dhms
        subroutine r8_to_i4(xmin,xmax,x,ixmin,ixmax,ix) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: xmin
            real(kind=8) :: xmax
            real(kind=8) :: x
            integer(kind=4) :: ixmin
            integer(kind=4) :: ixmax
            integer(kind=4) :: ix
        end subroutine r8_to_i4
        function r8_uniform_01(seed) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4) :: seed
            real(kind=8) :: r8_uniform_01
        end function r8_uniform_01
        function r8_uniform_ab(a,b,seed) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: a
            real(kind=8) :: b
            integer(kind=4) :: seed
            real(kind=8) :: r8_uniform_ab
        end function r8_uniform_ab
        subroutine r8_unswap3(x,y,z) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            real(kind=8) :: y
            real(kind=8) :: z
        end subroutine r8_unswap3
        function r8_walsh_1d(x,digit) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: x
            integer(kind=4) :: digit
            real(kind=8) :: r8_walsh_1d
        end function r8_walsh_1d
        function r8_wrap(r,rlo,rhi) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: r
            real(kind=8) :: rlo
            real(kind=8) :: rhi
            real(kind=8) :: r8_wrap
        end function r8_wrap
        function r8_zeta(p) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: p
            real(kind=8) :: r8_zeta
        end function r8_zeta
        function r82_dist_l2(a1,a2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a1
            real(kind=8) dimension(2) :: a2
            real(kind=8) :: r82_dist_l2
        end function r82_dist_l2
        function r82_eq(a1,a2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a1
            real(kind=8) dimension(2) :: a2
            logical(kind=4) :: r82_eq
        end function r82_eq
        function r82_ge(a1,a2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a1
            real(kind=8) dimension(2) :: a2
            logical(kind=4) :: r82_ge
        end function r82_ge
        function r82_gt(a1,a2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a1
            real(kind=8) dimension(2) :: a2
            logical(kind=4) :: r82_gt
        end function r82_gt
        function r82_le(a1,a2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a1
            real(kind=8) dimension(2) :: a2
            logical(kind=4) :: r82_le
        end function r82_le
        function r82_lt(a1,a2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a1
            real(kind=8) dimension(2) :: a2
            logical(kind=4) :: r82_lt
        end function r82_lt
        function r82_ne(a1,a2) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a1
            real(kind=8) dimension(2) :: a2
            logical(kind=4) :: r82_ne
        end function r82_ne
        function r82_norm(a) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a
            real(kind=8) :: r82_norm
        end function r82_norm
        subroutine r82_normalize(a) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a
        end subroutine r82_normalize
        subroutine r82_print(a,title) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: a
            character*(*) :: title
        end subroutine r82_print
        subroutine r82_swap(x,y) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) dimension(2) :: x
            real(kind=8) dimension(2) :: y
        end subroutine r82_swap
        subroutine r82_uniform_ab(b,c,seed,a) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: b
            real(kind=8) :: c
            integer(kind=4) :: seed
            real(kind=8) dimension(2) :: a
        end subroutine r82_uniform_ab
        subroutine r82col_print_part(n,a,max_print,title) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            integer(kind=4), optional,check(shape(a,0)==n),depend(a) :: n=shape(a,0)
            real(kind=8) dimension(n,2) :: a
            integer(kind=4) :: max_print
            character*(*) :: title
        end subroutine r82col_print_part
        subroutine r82poly2_print(a,b,c,d,e,f) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: a
            real(kind=8) :: b
            real(kind=8) :: c
            real(kind=8) :: d
            real(kind=8) :: e
            real(kind=8) :: f
        end subroutine r82poly2_print
        subroutine r82poly2_type(a,b,c,d,e,f,type_bn) ! in :r8lib:../src/r8lib/f90/r8lib.f90
            real(kind=8) :: a
            real(kind=8) :: b
            real(kind=8) :: c
            real(kind=8) :: d
            real(kind=8) :: e
            real(kind=8) :: f
            integer(kind=4) :: type_bn
            type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type
                type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type
                    type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type
                        type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type:unknown_type
                            type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type:unknown_type:unknown_type
                                type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type
                                    type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type
                                        type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type
                                            type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type
                                                type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type
                                                    type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type
                                                        type unknown_type ! in :r8lib:../src/r8lib/f90/r8lib.f90:r82poly2_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type:unknown_type
                                                        end type unknown_type
                                                    end type unknown_type
                                                end type unknown_type
                                            end type unknown_type
                                        end type unknown_type
                                    end type unknown_type
                                end type unknown_type
                            end type unknown_type
                        end type unknown_type
                    end type unknown_type
                end type unknown_type
            end type unknown_type
        end subroutine r82poly2_type
    end interface 
end python module r8lib

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
